Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      IObjectTypeDeclaration
        FSharpIdentifierToken(type:IDENTIFIER, text:IPrintable)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:   ) spaces:"   "
        IAbstractSlot
          FSharpTokenType+AbstractTokenElement(type:ABSTRACT, text:abstract)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+MemberTokenElement(type:MEMBER, text:member)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:Print)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+ColonTokenElement(type:COLON, text::)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IFunType
            INamedType
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:unit)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+RarrowTokenElement(type:RARROW, text:->)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            INamedType
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:unit)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    ITypeDeclarationGroup
      FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      IObjectTypeDeclaration
        FSharpIdentifierToken(type:IDENTIFIER, text:SomeClass1)
        IImplicitConstructorDeclaration
          FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
          IMemberParamDeclarationGroup
            IMemberParamDeclaration
              ILocalDeclaration
                FSharpIdentifierToken(type:IDENTIFIER, text:x)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedType
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
            FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IMemberParamDeclaration
              ILocalDeclaration
                FSharpIdentifierToken(type:IDENTIFIER, text:y)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedType
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:float)
        FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:   ) spaces:"   "
        IInterfaceImplementation
          FSharpTokenType+InterfaceTokenElement(type:INTERFACE, text:interface)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:IPrintable)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+WithTokenElement(type:WITH, text:with)
          NewLine(type:NEW_LINE, text:\n) spaces:"\n"
          Whitespace(type:WHITE_SPACE, text:      ) spaces:"      "
          IMemberDeclaration
            FSharpTokenType+MemberTokenElement(type:MEMBER, text:member)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IMemberSelfId
              FSharpIdentifierToken(type:IDENTIFIER, text:this)
            FSharpTokenType+DotTokenElement(type:DOT, text:.)
            FSharpIdentifierToken(type:IDENTIFIER, text:Print)
            IMemberParamDeclaration
              IParenPat
                IConstPat
                  FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                  FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IChameleonExpression
              IPrefixAppExpr
                IPrefixAppExpr
                  IPrefixAppExpr
                    IReferenceExpr
                      FSharpIdentifierToken(type:IDENTIFIER, text:printfn)
                    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                    ILiteralExpr
                      FSharpString(type:STRING, text:"%d %f")
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  IReferenceExpr
                    FSharpIdentifierToken(type:IDENTIFIER, text:x)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IReferenceExpr
                  FSharpIdentifierToken(type:IDENTIFIER, text:y)