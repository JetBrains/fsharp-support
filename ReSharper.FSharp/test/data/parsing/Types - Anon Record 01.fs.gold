Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      FSharpTokenType+LetTokenElement(type:LET, text:let)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      ITopBinding
        IWildPat
          FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
        IReturnTypeInfo
          FSharpTokenType+ColonTokenElement(type:COLON, text::)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IAnonRecordTypeUsage
            FSharpTokenType+LbraceBarTokenElement(type:LBRACE_BAR, text:{|)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IAnonRecordField
              IExpressionReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:A)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
            FSharpTokenType+SemicolonTokenElement(type:SEMICOLON, text:;)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            IAnonRecordField
              IExpressionReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:B)
              FSharpTokenType+ColonTokenElement(type:COLON, text::)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedTypeUsage
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+BarRbraceTokenElement(type:BAR_RBRACE, text:|})
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

