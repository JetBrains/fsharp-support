Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IDoStatement
      FSharpTokenType+DoTokenElement(type:DO, text:do)
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      Whitespace(type:WHITE_SPACE, text:  ) spaces:"  "
      IChameleonExpression
        IListExpr
          FSharpTokenType+LbrackTokenElement(type:LBRACK, text:[)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ISequentialExpr
            ILiteralExpr
              FSharpToken(type:INT32, text:1)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            IIfThenElseExpr
              FSharpTokenType+IfTokenElement(type:IF, text:if)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ILiteralExpr
                FSharpTokenType+TrueTokenElement(type:TRUE, text:true)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+ThenTokenElement(type:THEN, text:then)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:      ) spaces:"      "
              IYieldOrReturnExpr
                FSharpTokenType+YieldTokenElement(type:YIELD, text:yield)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                ILiteralExpr
                  FSharpToken(type:INT32, text:2)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            ILiteralExpr
              FSharpToken(type:INT32, text:3)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+RbrackTokenElement(type:RBRACK, text:])
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

