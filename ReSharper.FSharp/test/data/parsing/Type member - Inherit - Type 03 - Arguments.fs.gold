Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      IFSharpTypeDeclaration
        FSharpIdentifierToken(type:IDENTIFIER, text:T)
        IPrimaryConstructorDeclaration
          IParametersPatternDeclaration
            IParenPat
              FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
              FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        ITypeMemberDeclarationList
          ITypeInherit
            FSharpTokenType+InheritTokenElement(type:INHERIT, text:inherit)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            ITypeReferenceName
              FSharpIdentifierToken(type:IDENTIFIER, text:Foo)
            IChameleonExpression
              IParenExpr
                FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
                ILiteralExpr
                  FSharpToken(type:INT32, text:1)
                FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

