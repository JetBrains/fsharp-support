Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ITypeDeclarationGroup
      IFSharpTypeDeclaration
        FSharpTokenType+TypeTokenElement(type:TYPE, text:type)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpIdentifierToken(type:IDENTIFIER, text:T1)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        NewLine(type:NEW_LINE, text:\n) spaces:"\n"
        Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
        ITypeMemberDeclarationList
          IInterfaceImplementation
            FSharpTokenType+InterfaceTokenElement(type:INTERFACE, text:interface)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            ITypeReferenceName
              FSharpIdentifierToken(type:IDENTIFIER, text:I)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+WithTokenElement(type:WITH, text:with)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    IDoStatement
      IAttributeList
        FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
        IAttribute
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:A)
        FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      FSharpTokenType+DoTokenElement(type:DO, text:do)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      IChameleonExpression
        IUnitExpr
          FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
          FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

