Language: PsiLanguageType:F#
IFSharpImplFile
  INamedModuleDeclaration
    FSharpTokenType+ModuleTokenElement(type:MODULE, text:module)
    Whitespace(type:WHITE_SPACE, text: ) spaces:" "
    FSharpIdentifierToken(type:IDENTIFIER, text:Module)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"
    IDoStatement
      IChameleonExpression
        INewExpr
          FSharpTokenType+NewTokenElement(type:NEW, text:new)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ITypeReferenceName
            ITypeReferenceName
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:A)
                IPrefixAppTypeArgumentList
                  FSharpTokenType+LessTokenElement(type:LESS, text:<)
                  IAnonTypeUsage
                    FSharpIdentifierToken(type:IDENTIFIER, text:_)
                  FSharpTokenType+GreaterTokenElement(type:GREATER, text:>)
              FSharpTokenType+DotTokenElement(type:DOT, text:.)
              FSharpIdentifierToken(type:IDENTIFIER, text:B)
              IPrefixAppTypeArgumentList
                FSharpTokenType+LessTokenElement(type:LESS, text:<)
                IAnonTypeUsage
                  FSharpIdentifierToken(type:IDENTIFIER, text:_)
                FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IAnonTypeUsage
                  FSharpIdentifierToken(type:IDENTIFIER, text:_)
                FSharpTokenType+GreaterTokenElement(type:GREATER, text:>)
            FSharpTokenType+DotTokenElement(type:DOT, text:.)
            FSharpIdentifierToken(type:IDENTIFIER, text:C)
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"

