Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      FSharpTokenType+LetTokenElement(type:LET, text:let)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      ITopBinding
        IWildPat
          FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
        IReturnTypeInfo
          FSharpTokenType+ColonTokenElement(type:COLON, text::)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IUnsupportedTypeUsage
            INamedTypeUsage
              ITypeReferenceName
                ITypeParameterId
                  FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                  FSharpIdentifierToken(type:IDENTIFIER, text:T)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+WhenTokenElement(type:WHEN, text:when)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            ITypeReferenceName
              ITypeParameterId
                FSharpTokenType+QuoteTokenElement(type:QUOTE, text:')
                FSharpIdentifierToken(type:IDENTIFIER, text:T)
            FSharpTokenType+ColonTokenElement(type:COLON, text::)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+NullTokenElement(type:NULL, text:null)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IUnitExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

