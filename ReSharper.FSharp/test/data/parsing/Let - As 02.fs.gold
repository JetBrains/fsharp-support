Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetBindingsDeclaration
      FSharpTokenType+LetTokenElement(type:LET, text:let)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      ITopBinding
        ITopAsPat
          IParenPat
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            ITuplePat
              ITopReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:a)
              FSharpTokenType+CommaTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ITopReferencePat
                IExpressionReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:b)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpTokenType+AsTokenElement(type:AS, text:as)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          FSharpIdentifierToken(type:IDENTIFIER, text:y)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          ILiteralExpr
            FSharpToken(type:INT32, text:1)
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

