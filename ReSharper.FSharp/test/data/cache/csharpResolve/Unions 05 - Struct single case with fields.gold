using static Module;

public class Class<T> where T : struct
{
  public Class()
  {
    SU u = SU.NewCase(item: 123);

    int t = u.Tag;
    int i = u.Item;

    bool isCaseError = u.|IsCase|(0);
    int tagsError = U.|Tags|(1).CaseA;
    U.|Case|(2) c = (U.|Case|(3)) u;
  }
}

public class ClassU : Class<|U|(4)>
{
}

public class ClassSU : Class<SU>
{
}

---------------------------------------------------------
(0): ReSharper Error Highlighting: Cannot resolve symbol 'IsCase'
(1): ReSharper Error Highlighting: Cannot resolve symbol 'Tags'
(2): ReSharper Underlined Error Highlighting: Cannot access internal class 'Case' here
(3): ReSharper Underlined Error Highlighting: Cannot access internal class 'Case' here
(4): ReSharper Underlined Error Highlighting: The type 'Module.U' must be a non-nullable value type in order to use it as parameter 'T'
M:Module.SU.NewCase(System.Int32)
M:Module.SU.NewCase(System.Int32)
P:Module.SU.Tag
P:Module.SU.Case.Item
