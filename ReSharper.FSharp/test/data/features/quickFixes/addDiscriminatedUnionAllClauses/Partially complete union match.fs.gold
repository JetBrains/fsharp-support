module Say
type TestUnion =
    | FieldlessCase
    | CaseWithSingleField of int
    | CaseWithMultipleFields of string * int

// Not available if the match statement is partially complete
let unionCaseMatch = TestUnion.FieldlessCase
match |unionCaseMatch|(0) with
| FieldlessCase -> failwith ""
------------------------------------------------
0: Incomplete pattern matches on this expression. For example, the value 'CaseWithMultipleFields (_, _)' may indicate a case not covered by the pattern(s).
QUICKFIXES:
Add '_' pattern
